@page "/fetchdata"

@using BackgroundProgressNotifications.Shared
@using Microsoft.AspNetCore.SignalR.Client

@implements IAsyncDisposable

@inject HttpClient Http
@inject NavigationManager Nav

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server with SignalR.</p>

@if (forecast == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@forecast.Date.ToShortDateString()</td>
                <td>@forecast.TemperatureC</td>
                <td>@forecast.TemperatureF</td>
                <td>@forecast.Summary</td>
            </tr>
        </tbody>
    </table>
}

@code {
    private WeatherForecast? forecast;
    private HubConnection? _hubConnection;

    protected override async Task OnInitializedAsync()
    {
        _hubConnection = new HubConnectionBuilder()
            .WithUrl(Nav.ToAbsoluteUri("/weather"))
            .WithAutomaticReconnect()
            .AddMessagePackProtocol()
            .Build();

        _hubConnection.On<WeatherForecast>("UpdateForecast", UpdateForecast);

        await _hubConnection.StartAsync();
    }

    public void UpdateForecast(WeatherForecast forecast)
    {
        this.forecast = forecast;
        StateHasChanged();
    }

    public async ValueTask DisposeAsync()
    {
        if (_hubConnection is not null)
        {
            await _hubConnection.DisposeAsync();
        }
    }
}
